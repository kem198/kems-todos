name: Publish Swagger UI

on:
  push:
    branches:
      - main
      - develop
    paths:
      - "src/backend/modules/todos-api/**"
      - ".github/workflows/publish-swagger.yml"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: publish-swagger
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    services:
      postgres:
        image: postgres:17.4-bookworm
        ports:
          - 5432:5432
        env:
          TZ: Asia/Tokyo
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: todos_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/todos_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SERVER_PORT: 8081
      SWAGGER_DOC_PATH: swagger-ui/openapi.json

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup database schema
        run: |
          PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d todos_db -f postgres/init/01_create_todos.sql
          PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d todos_db -f postgres/init/99_create_examples.sql

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle

      - name: Build backend
        working-directory: src/backend
        run: ./gradlew :todos-api:build --no-daemon

      - name: Start API (background)
        working-directory: src/backend
        run: |
          java -jar modules/todos-api/build/libs/todos-api-0.0.1-SNAPSHOT.jar --server.port=${SERVER_PORT} &
          echo $! > ../../tmp-api.pid

      - name: Wait for API
        run: timeout 60 bash -c 'until curl -f http://localhost:${SERVER_PORT}/v1/greeting/hello; do sleep 2; done'

      - name: Fetch OpenAPI document
        run: |
          mkdir -p swagger-ui
          curl -sSf http://localhost:${SERVER_PORT}/v3/api-docs > ${SWAGGER_DOC_PATH}

      - name: Stop API
        if: always()
        run: |
          if [ -f tmp-api.pid ]; then
            kill $(cat tmp-api.pid) || true
            rm -f tmp-api.pid
          fi

      - name: Build static Swagger UI
        run: |
          mkdir -p public
          cp ${SWAGGER_DOC_PATH} public/openapi.json
          cat <<'HTML' > public/index.html
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="utf-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <title>KeM's Todos API</title>
            <link rel="stylesheet" href="https://unpkg.com/swagger-ui-dist@5/swagger-ui.css" />
            <style>
              body { margin: 0; background: #f8f9fb; }
              #swagger-ui { box-sizing: border-box; }
            </style>
          </head>
          <body>
            <div id="swagger-ui"></div>
            <script src="https://unpkg.com/swagger-ui-dist@5/swagger-ui-bundle.js"></script>
            <script src="https://unpkg.com/swagger-ui-dist@5/swagger-ui-standalone-preset.js"></script>
            <script>
              window.addEventListener('load', () => {
                window.ui = SwaggerUIBundle({
                  url: './openapi.json',
                  dom_id: '#swagger-ui',
                  presets: [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset],
                  layout: 'StandaloneLayout',
                });
              });
            </script>
          </body>
          </html>
          HTML

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
